<p id="notice"><%= notice %></p>
<%= link_to 'New Post', post_new_path(@stud.id) %>

<table id = "Posts"></table>


<%= link_to 'Back',student_path(@stud) %>


<script>
alert = function(){};
window.onload = show_all_details();


function show_all_details()
{
	arr = ["", "Unposted", "Unverified", "Verified", "Flagged", "Rejected"];
	var table = document.getElementById("Posts");
	table.innerHTML = "";
	$.ajax({
		url:'/give_categories',
		type: 'POST',
		async: false,
		success: function(data_returned_by_server){
			categories = data_returned_by_server
		}	
	});
	var i = 0;
	for (i = 0; i < 8; i++)
	{
		var row = table.insertRow(-1);
		var cell1 = row.insertCell(0);
		str = categories[i].name.bold();
		cell1.innerHTML = str.fontsize(3.5);
		$.ajax({
            	url: '/give_subcat_posts/',
            	type: 'POST',
				data: {id: (i+1)},
				async: false,
				success: function (data_returned_by_server) {
					data_returned = data_returned_by_server
					}
					});
			
	
		var row = table.insertRow(-1);
		
		if (data_returned.types1.length == 0 && data_returned.subs1.length == 0)
		{
			$.ajax({
            	url: '/give_previous_posts/',
            	type: 'POST',
				data: {id: "<%=@stud.id%>", l1: (i+1).toString(10), l2: -1},
				async: false,
				success: function (data_returned_by_server) {
					data_returned1 = data_returned_by_server;				
				}
			
			});
			if (data_returned1.length == 0)
			{
			 	var cell1 = row.insertCell(0);
				cell1.innerHTML = "NIL";
			}
			else
			{
				for (j = 0; j < data_returned1.length; j++)
				{
					var row = table.insertRow(-1);
				
  					var cell2 = row.insertCell(0);
  					var cell3 = row.insertCell(1);
  					var cell4 = row.insertCell(2);
  					
  			
  					cell2.innerHTML = reveal(data_returned1[j].id, 1);
  					cell3.innerHTML = arr[data_returned1[j].status];
  					if (data_returned1[j].status > 2)
  					{
  						var cell5 = row.insertCell(3);
  						cell5.innerHTML = signer(data_returned1[j]); 			
  					}
				}
			}
		}
					
		else if (data_returned.types1.length == 0)
		{
			$.ajax({
            	url: '/give_previous_posts_bysub/',
            	type: 'POST',
				data: {id: "<%=@stud.id%>", l1: (i+1).toString(10), l2: -1, l3: data_returned.subs_id1},
				async: false,
				success: function (data_returned_by_server) {
					data_returned1 = data_returned_by_server;	
				}
			});			
				
			var j = 0;
			for (j = 0; j < data_returned.subs1.length; j++)
			{
				var flag = 0;
				for (var k = 0; k < data_returned1.length; k++)
				{
					
					if (data_returned1[k].subcategory == data_returned.subs_id1[j])
					{
						flag = 1;
						var row = table.insertRow(-1);
						var cell1 = row.insertCell(0);
  						var cell2 = row.insertCell(1);
  						var cell3 = row.insertCell(2);
						cell1.innerHTML = data_returned.subs1[j];
  						cell2.innerHTML = reveal(data_returned1[k].id, 1);
  						cell3.innerHTML = arr[data_returned1[k].status];
  						if (data_returned1[k].status > 2)
  						{
  									var cell4 = row.insertCell(3);
  									cell4.innerHTML = signer(data_returned1[k]); 			
  						}
					}
					
				}
  			
  				if (flag == 0)
  				{			
  					var row = table.insertRow(-1);
					var cell1 = row.insertCell(0);
  					var cell2 = row.insertCell(1);
  					cell1.innerHTML = data_returned.subs1[j];
  					cell2.innerHTML = "NIL";
  				}
  			}
  			}
  	 			
  		else
  		{
  				var j = 0, k = 0, l = 0;	
  				for (j = 0; j < data_returned.types1.length; j++)
  				{
  					$.ajax({
            				url: '/give_previous_posts_bysub/',
            				type: 'POST',
							data: {id: "<%=@stud.id%>", l1: (i+1).toString(10), l2: data_returned.types_id1[j], l3: data_returned.subs_id1},
							async: false,
							success: function (data_returned_by_server) {
							data_returned1 = data_returned_by_server;	
							}
						});

						
					if (data_returned1.length == 0)
					{
						var row = table.insertRow(-1);
						var cell1 = row.insertCell(0);
						var row = table.insertRow(-1);
						var cell1 = row.insertCell(0);
						var row = table.insertRow(-1);
						var cell1 = row.insertCell(0);						
						cell1.innerHTML = data_returned.types1[j].bold();
						var row = table.insertRow(-1);
						var cell2 = row.insertCell(0);
						cell2.innerHTML = "NIL";
						if ((i + 1) == 3)
							continue;
						else
						{
							break;
						}
					}
					else
					{
						var row = table.insertRow(-1);
						var cell1 = row.insertCell(0);
						var row = table.insertRow(-1);
						var row = table.insertRow(-1);
						var cell1 = row.insertCell(0);
						cell1.innerHTML = data_returned.types1[j].bold();
					}
  					for (k = 0; k < data_returned.subs1.length; k++)
  					{
  						var flag = 0;
  						for (l = 0; l < data_returned1.length; l++)
  						{
  						
  							if (data_returned1[l].subcategory == data_returned.subs_id1[k])
							{
								
								flag = 1;
								var row = table.insertRow(-1);
								var cell1 = row.insertCell(0);
  								var cell2 = row.insertCell(1);
  								var cell3 = row.insertCell(2);
								cell1.innerHTML = data_returned.subs1[k];
  								cell2.innerHTML = reveal(data_returned1[l].id, 1);
  								cell3.innerHTML = arr[data_returned1[l].status];
  								if (data_returned1[l].status > 2)
  								{
  									var cell4 = row.insertCell(3);
  									 
  									cell4.innerHTML = signer(data_returned1[l]); 
  									
  								}
							}
  						
  						}
  						
  						if (flag == 0)
						{
							var row = table.insertRow(-1);
							var cell1 = row.insertCell(0);
							var cell2 = row.insertCell(1);
							cell1.innerHTML = data_returned.subs1[k];
							cell2.innerHTML = "NIL";
									
						}
  						
  						
  					
  					}
  					
  					
  					
  					
  					
  				}
			
  				
  				
  				
  				
  			}
  			
  			
  			
  			
  			
  			
  			
  			
  			
  			
		for (var j = 0; j < 5; j ++)
		{
			var row = table.insertRow(-1);
			var cell1 = row.insertCell(0);
		}
	}
}	
		


function signer(post_details)
{

	var x = post_details.signature;
	var public_key = post_details.sign_id;
	
	
	if (RSA_Verify(post_details.postkey, public_key, x))
			return "Signed by Verified Entity";
	else
		return "Unauthorised Verifier";

}

</script>